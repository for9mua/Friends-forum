declare const _sfc_main: import("vue").DefineComponent<{
    size: {
        type: StringConstructor;
        required: true;
    };
    theme: {
        type: StringConstructor;
        required: true;
    };
    skin: {
        type: StringConstructor;
        required: true;
    };
    disableGroup: {
        type: ArrayConstructor;
        required: false;
    };
    optionsName: {
        type: null;
        required: false;
    };
    unicodeVersion: {
        type: NumberConstructor;
        required: false;
    };
    needLocal: {
        type: BooleanConstructor;
        required: false;
    };
    defaultSelect: {
        type: StringConstructor;
        required: false;
    };
    customSize: {
        type: null;
        required: false;
    };
    customIcon: {
        type: null;
        required: false;
    };
    customTheme: {
        type: null;
        required: false;
    };
    customTab: {
        type: null;
        required: false;
    };
    fixPos: {
        type: null;
        required: false;
    };
}, {
    Skin: Emoji.JsonData;
    props: {
        size: string;
        theme: 'dark' | 'default';
        skin: 'dark' | 'middark' | 'mid' | 'midlight' | 'light' | 'none';
        disableGroup?: string[] | undefined;
        optionsName?: Emoji.JsonData | undefined;
        unicodeVersion?: number | undefined;
        needLocal?: boolean | undefined;
        defaultSelect?: string | undefined;
        customSize?: Emoji.CustomSize | undefined;
        customIcon?: Emoji.CustomIcon | undefined;
        customTheme?: Emoji.CustomTheme | undefined;
        customTab?: Emoji.JsonData | undefined;
        fixPos?: Emoji.FixType | undefined;
    };
    emit: (event: "clickEmoji", ...args: any[]) => void;
    emojiData: Emoji.JsonData;
    sizeData: Emoji.JsonData;
    themeData: Emoji.JsonData;
    activeTab: import("vue").Ref<string>;
    pollUpEl: import("vue").Ref<HTMLElement | undefined>;
    renderData: Emoji.ObjectItem;
    recentData: import("vue").Ref<Emoji.ObjectItem>;
    groupName: string[];
    emojiSkin: (emoji: Emoji.EmojiItem) => string;
    initPollup: () => void;
    changeTab: (tab: string) => void;
    clickEmoji: (emoji: Emoji.EmojiItem) => void;
    deleteRecent: () => void;
    changePos: () => void;
    setSize: () => void;
    setTheme: () => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "clickEmoji"[], "clickEmoji", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    size: {
        type: StringConstructor;
        required: true;
    };
    theme: {
        type: StringConstructor;
        required: true;
    };
    skin: {
        type: StringConstructor;
        required: true;
    };
    disableGroup: {
        type: ArrayConstructor;
        required: false;
    };
    optionsName: {
        type: null;
        required: false;
    };
    unicodeVersion: {
        type: NumberConstructor;
        required: false;
    };
    needLocal: {
        type: BooleanConstructor;
        required: false;
    };
    defaultSelect: {
        type: StringConstructor;
        required: false;
    };
    customSize: {
        type: null;
        required: false;
    };
    customIcon: {
        type: null;
        required: false;
    };
    customTheme: {
        type: null;
        required: false;
    };
    customTab: {
        type: null;
        required: false;
    };
    fixPos: {
        type: null;
        required: false;
    };
}>> & {
    onClickEmoji?: ((...args: any[]) => any) | undefined;
}, {
    needLocal: boolean;
}>;
export default _sfc_main;
